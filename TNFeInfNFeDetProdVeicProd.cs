//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 3.0.1185.0 using the following command:
// XmlSchemaClassGenerator.Console -v --output C:\Projetos.git\Recursos.C#.IWTNfeCompleto\BibliotecasDatasets\novo --namespace IWTNFCompleto.BibliotecaDatasets.v4_0 --separateFiles --namingScheme Legacy --typeNameSubstituteFile C:\Projetos.git\Recursos.C#.IWTNfeCompleto\correcoes.map C:\Temp\PL_009\retEnviNFe_v4.00.xsd
namespace IWTNFCompleto.BibliotecaDatasets.v4_0
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TNFeInfNFeDetProdVeicProd", Namespace="http://www.portalfiscal.inf.br/nfe", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TNFeInfNFeDetProdVeicProd
    {
        
        /// <summary>
        /// <para>Tipo da Operação (1 - Venda concessionária; 2 - Faturamento direto; 3 - Venda direta; 0 - Outros)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tipo da Operação (1 - Venda concessionária; 2 - Faturamento direto; 3 - Venda dir" +
            "eta; 0 - Outros)")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("tpOp")]
        public TNFeInfNFeDetProdVeicProdTpOp TpOp { get; set; }
        
        /// <summary>
        /// <para>Chassi do veículo - VIN (código-identificação-veículo)</para>
        /// <para xml:lang="en">Minimum length: 17.</para>
        /// <para xml:lang="en">Maximum length: 17.</para>
        /// <para xml:lang="en">Pattern: [A-Z0-9]+.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Chassi do veículo - VIN (código-identificação-veículo)")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(17)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(17)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[A-Z0-9]+")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("chassi")]
        public string Chassi { get; set; }
        
        /// <summary>
        /// <para>Cor do veículo (código de cada montadora)</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 4.</para>
        /// <para xml:lang="en">Pattern: [!-ÿ]{1}[ -ÿ]{0,}[!-ÿ]{1}|[!-ÿ]{1}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cor do veículo (código de cada montadora)")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[!-ÿ]{1}[ -ÿ]{0,}[!-ÿ]{1}|[!-ÿ]{1}")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("cCor")]
        public string CCor { get; set; }
        
        /// <summary>
        /// <para>Descrição da cor</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 40.</para>
        /// <para xml:lang="en">Pattern: [!-ÿ]{1}[ -ÿ]{0,}[!-ÿ]{1}|[!-ÿ]{1}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Descrição da cor")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(40)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[!-ÿ]{1}[ -ÿ]{0,}[!-ÿ]{1}|[!-ÿ]{1}")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("xCor")]
        public string XCor { get; set; }
        
        /// <summary>
        /// <para>Potência máxima do motor do veículo em cavalo vapor (CV). (potência-veículo)</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 4.</para>
        /// <para xml:lang="en">Pattern: [!-ÿ]{1}[ -ÿ]{0,}[!-ÿ]{1}|[!-ÿ]{1}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Potência máxima do motor do veículo em cavalo vapor (CV). (potência-veículo)")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[!-ÿ]{1}[ -ÿ]{0,}[!-ÿ]{1}|[!-ÿ]{1}")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("pot")]
        public string Pot { get; set; }
        
        /// <summary>
        /// <para>Capacidade voluntária do motor expressa em centímetros cúbicos (CC). (cilindradas)</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 4.</para>
        /// <para xml:lang="en">Pattern: [!-ÿ]{1}[ -ÿ]{0,}[!-ÿ]{1}|[!-ÿ]{1}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Capacidade voluntária do motor expressa em centímetros cúbicos (CC). (cilindradas" +
            ")")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[!-ÿ]{1}[ -ÿ]{0,}[!-ÿ]{1}|[!-ÿ]{1}")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("cilin")]
        public string Cilin { get; set; }
        
        /// <summary>
        /// <para>Peso líquido</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 9.</para>
        /// <para xml:lang="en">Pattern: [!-ÿ]{1}[ -ÿ]{0,}[!-ÿ]{1}|[!-ÿ]{1}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Peso líquido")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(9)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[!-ÿ]{1}[ -ÿ]{0,}[!-ÿ]{1}|[!-ÿ]{1}")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("pesoL")]
        public string pesoL { get; set; }
        
        /// <summary>
        /// <para>Peso bruto</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 9.</para>
        /// <para xml:lang="en">Pattern: [!-ÿ]{1}[ -ÿ]{0,}[!-ÿ]{1}|[!-ÿ]{1}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Peso bruto")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(9)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[!-ÿ]{1}[ -ÿ]{0,}[!-ÿ]{1}|[!-ÿ]{1}")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("pesoB")]
        public string pesoB { get; set; }
        
        /// <summary>
        /// <para>Serial (série)</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 9.</para>
        /// <para xml:lang="en">Pattern: [!-ÿ]{1}[ -ÿ]{0,}[!-ÿ]{1}|[!-ÿ]{1}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Serial (série)")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(9)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[!-ÿ]{1}[ -ÿ]{0,}[!-ÿ]{1}|[!-ÿ]{1}")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("nSerie")]
        public string NSerie { get; set; }
        
        /// <summary>
        /// <para>Tipo de combustível-Tabela RENAVAM: 01-Álcool; 02-Gasolina; 03-Diesel; 16-Álcool/Gas.; 17-Gas./Álcool/GNV; 18-Gasolina/Elétrico</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 2.</para>
        /// <para xml:lang="en">Pattern: [!-ÿ]{1}[ -ÿ]{0,}[!-ÿ]{1}|[!-ÿ]{1}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tipo de combustível-Tabela RENAVAM: 01-Álcool; 02-Gasolina; 03-Diesel; 16-Álcool/" +
            "Gas.; 17-Gas./Álcool/GNV; 18-Gasolina/Elétrico")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(2)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[!-ÿ]{1}[ -ÿ]{0,}[!-ÿ]{1}|[!-ÿ]{1}")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("tpComb")]
        public string TpComb { get; set; }
        
        /// <summary>
        /// <para>Número do motor</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 21.</para>
        /// <para xml:lang="en">Pattern: [!-ÿ]{1}[ -ÿ]{0,}[!-ÿ]{1}|[!-ÿ]{1}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Número do motor")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(21)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[!-ÿ]{1}[ -ÿ]{0,}[!-ÿ]{1}|[!-ÿ]{1}")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("nMotor")]
        public string NMotor { get; set; }
        
        /// <summary>
        /// <para>CMT-Capacidade Máxima de Tração - em Toneladas 4 casas decimais</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 9.</para>
        /// <para xml:lang="en">Pattern: [!-ÿ]{1}[ -ÿ]{0,}[!-ÿ]{1}|[!-ÿ]{1}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CMT-Capacidade Máxima de Tração - em Toneladas 4 casas decimais")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(9)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[!-ÿ]{1}[ -ÿ]{0,}[!-ÿ]{1}|[!-ÿ]{1}")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("CMT")]
        public string CMT { get; set; }
        
        /// <summary>
        /// <para>Distância entre eixos</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 4.</para>
        /// <para xml:lang="en">Pattern: [!-ÿ]{1}[ -ÿ]{0,}[!-ÿ]{1}|[!-ÿ]{1}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Distância entre eixos")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[!-ÿ]{1}[ -ÿ]{0,}[!-ÿ]{1}|[!-ÿ]{1}")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("dist")]
        public string Dist { get; set; }
        
        /// <summary>
        /// <para>Ano Modelo de Fabricação</para>
        /// <para xml:lang="en">Pattern: [0-9]{4}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Ano Modelo de Fabricação")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{4}")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("anoMod")]
        public string AnoMod { get; set; }
        
        /// <summary>
        /// <para>Ano de Fabricação</para>
        /// <para xml:lang="en">Pattern: [0-9]{4}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Ano de Fabricação")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{4}")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("anoFab")]
        public string AnoFab { get; set; }
        
        /// <summary>
        /// <para>Tipo de pintura</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 1.</para>
        /// <para xml:lang="en">Pattern: [!-ÿ]{1}[ -ÿ]{0,}[!-ÿ]{1}|[!-ÿ]{1}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tipo de pintura")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[!-ÿ]{1}[ -ÿ]{0,}[!-ÿ]{1}|[!-ÿ]{1}")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("tpPint")]
        public string TpPint { get; set; }
        
        /// <summary>
        /// <para>Tipo de veículo (utilizar tabela RENAVAM)</para>
        /// <para xml:lang="en">Pattern: [0-9]{1,2}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tipo de veículo (utilizar tabela RENAVAM)")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{1,2}")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("tpVeic")]
        public string TpVeic { get; set; }
        
        /// <summary>
        /// <para>Espécie de veículo (utilizar tabela RENAVAM)</para>
        /// <para xml:lang="en">Pattern: [0-9]{1}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Espécie de veículo (utilizar tabela RENAVAM)")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{1}")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("espVeic")]
        public string EspVeic { get; set; }
        
        /// <summary>
        /// <para>Informa-se o veículo tem VIN (chassi) remarcado.
        ///R-Remarcado
        ///N-NormalVIN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Informa-se o veículo tem VIN (chassi) remarcado. R-Remarcado N-NormalVIN")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("VIN")]
        public TNFeInfNFeDetProdVeicProdVIN VIN { get; set; }
        
        /// <summary>
        /// <para>Condição do veículo (1 - acabado; 2 - inacabado; 3 - semi-acabado)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Condição do veículo (1 - acabado; 2 - inacabado; 3 - semi-acabado)")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("condVeic")]
        public TNFeInfNFeDetProdVeicProdCondVeic CondVeic { get; set; }
        
        /// <summary>
        /// <para>Código Marca Modelo (utilizar tabela RENAVAM)</para>
        /// <para xml:lang="en">Pattern: [0-9]{1,6}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Código Marca Modelo (utilizar tabela RENAVAM)")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{1,6}")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("cMod")]
        public string CMod { get; set; }
        
        /// <summary>
        /// <para>Código da Cor Segundo as regras de pré-cadastro do DENATRAN: 01-AMARELO;02-AZUL;03-BEGE;04-BRANCA;05-CINZA;06-DOURADA;07-GRENA 
        ///08-LARANJA;09-MARROM;10-PRATA;11-PRETA;12-ROSA;13-ROXA;14-VERDE;15-VERMELHA;16-FANTASIA</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 2.</para>
        /// <para xml:lang="en">Pattern: [0-9]{1,2}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Código da Cor Segundo as regras de pré-cadastro do DENATRAN: 01-AMARELO;02-AZUL;0" +
            "3-BEGE;04-BRANCA;05-CINZA;06-DOURADA;07-GRENA 08-LARANJA;09-MARROM;10-PRATA;11-P" +
            "RETA;12-ROSA;13-ROXA;14-VERDE;15-VERMELHA;16-FANTASIA")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(2)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{1,2}")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("cCorDENATRAN")]
        public string CCorDENATRAN { get; set; }
        
        /// <summary>
        /// <para>Quantidade máxima de permitida de passageiros sentados, inclusive motorista.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 3.</para>
        /// <para xml:lang="en">Pattern: [0-9]{1,3}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Quantidade máxima de permitida de passageiros sentados, inclusive motorista.")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(3)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{1,3}")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("lota")]
        public string Lota { get; set; }
        
        /// <summary>
        /// <para>Restrição
        ///0 - Não há;
        ///1 - Alienação Fiduciária;
        ///2 - Arrendamento Mercantil;
        ///3 - Reserva de Domínio;
        ///4 - Penhor de Veículos;
        ///9 - outras.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Restrição 0 - Não há; 1 - Alienação Fiduciária; 2 - Arrendamento Mercantil; 3 - R" +
            "eserva de Domínio; 4 - Penhor de Veículos; 9 - outras.")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("tpRest")]
        public TNFeInfNFeDetProdVeicProdTpRest TpRest { get; set; }
    }
}
