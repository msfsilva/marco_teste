//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 3.0.1188.0 using the following command:
// XmlSchemaClassGenerator.Console -v --output C:\Projetos.git\Recursos.C#.IWTNfeCompleto\BibliotecasDatasets\novo --namespace IWTNFCompleto.BibliotecaDatasets.v4_0 --separateFiles --collectionSettersMode Public --namingScheme Legacy --typeNameSubstituteFile C:\Projetos.git\Recursos.C#.IWTNfeCompleto\correcoes.map --order C:\Temp\PL_009\retEnviNFe_v4.00.xsd
namespace IWTNFCompleto.BibliotecaDatasets.v4_0
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1188.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TNFeInfNFeDetImpostoICMSICMSSN500", Namespace="http://www.portalfiscal.inf.br/nfe", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TNFeInfNFeDetImpostoICMSICMSSN500
    {
        
        /// <summary>
        /// <para>origem da mercadoria: 0 - Nacional 
        ///1 - Estrangeira - Importação direta 
        ///2 - Estrangeira - Adquirida no mercado interno</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("origem da mercadoria: 0 - Nacional 1 - Estrangeira - Importação direta 2 - Estran" +
            "geira - Adquirida no mercado interno")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("orig", Order=0)]
        public Torig orig { get; set; }
        
        /// <summary>
        /// <para>500 – ICMS cobrado anterirmente por substituição tributária (substituído) ou por antecipação
        ///(v.2.0)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("500 – ICMS cobrado anterirmente por substituição tributária (substituído) ou por " +
            "antecipação (v.2.0)")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("CSOSN", Order=1)]
        public TNFeInfNFeDetImpostoICMSICMSSN500CSOSN CSOSN { get; set; }
        
        /// <summary>
        /// <para>Valor da BC do ICMS ST retido anteriormente (v2.0)</para>
        /// <para>Tipo Decimal com 15 dígitos, sendo 13 de corpo e 2 decimais</para>
        /// <para xml:lang="en">Pattern: 0|0\.[0-9]{2}|[1-9]{1}[0-9]{0,12}(\.[0-9]{2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Valor da BC do ICMS ST retido anteriormente (v2.0)")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("0|0\\.[0-9]{2}|[1-9]{1}[0-9]{0,12}(\\.[0-9]{2})?")]
        [System.Xml.Serialization.XmlElementAttribute("vBCSTRet", Order=2)]
        public string vBCSTRet { get; set; }
        
        /// <summary>
        /// <para>Aliquota suportada pelo consumidor final.</para>
        /// <para>Tipo Decimal com até 3 dígitos inteiros e 2 até 4 decimais. Utilizados em TAGs opcionais, não aceita valor zero.</para>
        /// <para xml:lang="en">Pattern: 0\.[0-9]{2,4}|[1-9]{1}[0-9]{0,2}(\.[0-9]{2,4})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Aliquota suportada pelo consumidor final.")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("0\\.[0-9]{2,4}|[1-9]{1}[0-9]{0,2}(\\.[0-9]{2,4})?")]
        [System.Xml.Serialization.XmlElementAttribute("pST", Order=3)]
        public string pST { get; set; }
        
        /// <summary>
        /// <para>Valor do ICMS próprio do substituto</para>
        /// <para>Tipo Decimal com 15 dígitos, sendo 13 de corpo e 2 decimais</para>
        /// <para xml:lang="en">Pattern: 0|0\.[0-9]{2}|[1-9]{1}[0-9]{0,12}(\.[0-9]{2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Valor do ICMS próprio do substituto")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("0|0\\.[0-9]{2}|[1-9]{1}[0-9]{0,12}(\\.[0-9]{2})?")]
        [System.Xml.Serialization.XmlElementAttribute("vICMSSubstituto", Order=4)]
        public string VICMSSubstituto { get; set; }
        
        /// <summary>
        /// <para>Valor do ICMS ST retido anteriormente  (v2.0)</para>
        /// <para>Tipo Decimal com 15 dígitos, sendo 13 de corpo e 2 decimais</para>
        /// <para xml:lang="en">Pattern: 0|0\.[0-9]{2}|[1-9]{1}[0-9]{0,12}(\.[0-9]{2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Valor do ICMS ST retido anteriormente (v2.0)")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("0|0\\.[0-9]{2}|[1-9]{1}[0-9]{0,12}(\\.[0-9]{2})?")]
        [System.Xml.Serialization.XmlElementAttribute("vICMSSTRet", Order=5)]
        public string vICMSSTRet { get; set; }
        
        /// <summary>
        /// <para>Valor da Base de cálculo do FCP retido anteriormente.</para>
        /// <para>Tipo Decimal com 15 dígitos, sendo 13 de corpo e 2 decimais</para>
        /// <para xml:lang="en">Pattern: 0|0\.[0-9]{2}|[1-9]{1}[0-9]{0,12}(\.[0-9]{2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Valor da Base de cálculo do FCP retido anteriormente.")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("0|0\\.[0-9]{2}|[1-9]{1}[0-9]{0,12}(\\.[0-9]{2})?")]
        [System.Xml.Serialization.XmlElementAttribute("vBCFCPSTRet", Order=6)]
        public string vBCFCPSTRet { get; set; }
        
        /// <summary>
        /// <para>Percentual de FCP retido anteriormente por substituição tributária.</para>
        /// <para>Tipo Decimal com até 3 dígitos inteiros e 2 até 4 decimais. Utilizados em TAGs opcionais, não aceita valor zero.</para>
        /// <para xml:lang="en">Pattern: 0\.[0-9]{2,4}|[1-9]{1}[0-9]{0,2}(\.[0-9]{2,4})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Percentual de FCP retido anteriormente por substituição tributária.")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("0\\.[0-9]{2,4}|[1-9]{1}[0-9]{0,2}(\\.[0-9]{2,4})?")]
        [System.Xml.Serialization.XmlElementAttribute("pFCPSTRet", Order=7)]
        public string pFCPSTRet { get; set; }
        
        /// <summary>
        /// <para>Valor do FCP retido por substituição tributária.</para>
        /// <para>Tipo Decimal com 15 dígitos, sendo 13 de corpo e 2 decimais</para>
        /// <para xml:lang="en">Pattern: 0|0\.[0-9]{2}|[1-9]{1}[0-9]{0,12}(\.[0-9]{2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Valor do FCP retido por substituição tributária.")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("0|0\\.[0-9]{2}|[1-9]{1}[0-9]{0,12}(\\.[0-9]{2})?")]
        [System.Xml.Serialization.XmlElementAttribute("vFCPSTRet", Order=8)]
        public string vFCPSTRet { get; set; }
        
        /// <summary>
        /// <para>Percentual de redução da base de cálculo efetiva.</para>
        /// <para>Tipo Decimal com até 3 dígitos inteiros e 2 até 4 decimais. Utilizados em TAGs opcionais, não aceita valor zero.</para>
        /// <para xml:lang="en">Pattern: 0\.[0-9]{2,4}|[1-9]{1}[0-9]{0,2}(\.[0-9]{2,4})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Percentual de redução da base de cálculo efetiva.")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("0\\.[0-9]{2,4}|[1-9]{1}[0-9]{0,2}(\\.[0-9]{2,4})?")]
        [System.Xml.Serialization.XmlElementAttribute("pRedBCEfet", Order=9)]
        public string PRedBCEfet { get; set; }
        
        /// <summary>
        /// <para>Valor da base de cálculo efetiva.</para>
        /// <para>Tipo Decimal com 15 dígitos, sendo 13 de corpo e 2 decimais</para>
        /// <para xml:lang="en">Pattern: 0|0\.[0-9]{2}|[1-9]{1}[0-9]{0,12}(\.[0-9]{2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Valor da base de cálculo efetiva.")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("0|0\\.[0-9]{2}|[1-9]{1}[0-9]{0,12}(\\.[0-9]{2})?")]
        [System.Xml.Serialization.XmlElementAttribute("vBCEfet", Order=10)]
        public string VBCEfet { get; set; }
        
        /// <summary>
        /// <para>Alíquota do ICMS efetiva.</para>
        /// <para>Tipo Decimal com até 3 dígitos inteiros e 2 até 4 decimais. Utilizados em TAGs opcionais, não aceita valor zero.</para>
        /// <para xml:lang="en">Pattern: 0\.[0-9]{2,4}|[1-9]{1}[0-9]{0,2}(\.[0-9]{2,4})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Alíquota do ICMS efetiva.")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("0\\.[0-9]{2,4}|[1-9]{1}[0-9]{0,2}(\\.[0-9]{2,4})?")]
        [System.Xml.Serialization.XmlElementAttribute("pICMSEfet", Order=11)]
        public string PICMSEfet { get; set; }
        
        /// <summary>
        /// <para>Valor do ICMS efetivo.</para>
        /// <para>Tipo Decimal com 15 dígitos, sendo 13 de corpo e 2 decimais</para>
        /// <para xml:lang="en">Pattern: 0|0\.[0-9]{2}|[1-9]{1}[0-9]{0,12}(\.[0-9]{2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Valor do ICMS efetivo.")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("0|0\\.[0-9]{2}|[1-9]{1}[0-9]{0,12}(\\.[0-9]{2})?")]
        [System.Xml.Serialization.XmlElementAttribute("vICMSEfet", Order=12)]
        public string VICMSEfet { get; set; }
    }
}
