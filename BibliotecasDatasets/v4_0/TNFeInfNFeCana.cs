//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 3.0.1185.0 using the following command:
// XmlSchemaClassGenerator.Console -v --output C:\Projetos.git\Recursos.C#.IWTNfeCompleto\BibliotecasDatasets\novo --namespace IWTNFCompleto.BibliotecaDatasets.v4_0 --separateFiles --collectionSettersMode Public --namingScheme Legacy --typeNameSubstituteFile C:\Projetos.git\Recursos.C#.IWTNfeCompleto\correcoes.map C:\Temp\PL_009\retEnviNFe_v4.00.xsd
namespace IWTNFCompleto.BibliotecaDatasets.v4_0
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TNFeInfNFeCana", Namespace="http://www.portalfiscal.inf.br/nfe", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TNFeInfNFeCana
    {
        
        /// <summary>
        /// <para>Identificação da safra</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 9.</para>
        /// <para xml:lang="en">Pattern: [!-ÿ]{1}[ -ÿ]{0,}[!-ÿ]{1}|[!-ÿ]{1}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Identificação da safra")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(9)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[!-ÿ]{1}[ -ÿ]{0,}[!-ÿ]{1}|[!-ÿ]{1}")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("safra")]
        public string safra { get; set; }
        
        /// <summary>
        /// <para>Mês e Ano de Referência, formato: MM/AAAA</para>
        /// <para xml:lang="en">Pattern: (0[1-9]|1[0-2])([/][2][0-9][0-9][0-9]).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Mês e Ano de Referência, formato: MM/AAAA")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(0[1-9]|1[0-2])([/][2][0-9][0-9][0-9])")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("ref")]
        public string Ref { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<TNFeInfNFeCanaForDia> _forDia;
        
        /// <summary>
        /// <para>Fornecimentos diários</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Fornecimentos diários")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("forDia")]
        public System.Collections.ObjectModel.Collection<TNFeInfNFeCanaForDia> forDia
        {
            get
            {
                return _forDia;
            }
            set
            {
                _forDia = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="TNFeInfNFeCana" /> class.</para>
        /// </summary>
        public TNFeInfNFeCana()
        {
            this._forDia = new System.Collections.ObjectModel.Collection<TNFeInfNFeCanaForDia>();
            this._deduc = new System.Collections.ObjectModel.Collection<TNFeInfNFeCanaDeduc>();
        }
        
        /// <summary>
        /// <para>Total do mês</para>
        /// <para>Tipo Decimal com 11 inteiros, podendo ter de 1 até 10 decimais</para>
        /// <para xml:lang="en">Pattern: 0|0\.[0-9]{1,10}|[1-9]{1}[0-9]{0,10}|[1-9]{1}[0-9]{0,10}(\.[0-9]{1,10})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Total do mês")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("0|0\\.[0-9]{1,10}|[1-9]{1}[0-9]{0,10}|[1-9]{1}[0-9]{0,10}(\\.[0-9]{1,10})?")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("qTotMes")]
        public string QTotMes { get; set; }
        
        /// <summary>
        /// <para>Total Anterior</para>
        /// <para>Tipo Decimal com 11 inteiros, podendo ter de 1 até 10 decimais</para>
        /// <para xml:lang="en">Pattern: 0|0\.[0-9]{1,10}|[1-9]{1}[0-9]{0,10}|[1-9]{1}[0-9]{0,10}(\.[0-9]{1,10})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Total Anterior")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("0|0\\.[0-9]{1,10}|[1-9]{1}[0-9]{0,10}|[1-9]{1}[0-9]{0,10}(\\.[0-9]{1,10})?")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("qTotAnt")]
        public string QTotAnt { get; set; }
        
        /// <summary>
        /// <para>Total Geral</para>
        /// <para>Tipo Decimal com 11 inteiros, podendo ter de 1 até 10 decimais</para>
        /// <para xml:lang="en">Pattern: 0|0\.[0-9]{1,10}|[1-9]{1}[0-9]{0,10}|[1-9]{1}[0-9]{0,10}(\.[0-9]{1,10})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Total Geral")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("0|0\\.[0-9]{1,10}|[1-9]{1}[0-9]{0,10}|[1-9]{1}[0-9]{0,10}(\\.[0-9]{1,10})?")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("qTotGer")]
        public string QTotGer { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<TNFeInfNFeCanaDeduc> _deduc;
        
        /// <summary>
        /// <para>Deduções - Taxas e Contribuições</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Deduções - Taxas e Contribuições")]
        [System.Xml.Serialization.XmlElementAttribute("deduc")]
        public System.Collections.ObjectModel.Collection<TNFeInfNFeCanaDeduc> deduc
        {
            get
            {
                return _deduc;
            }
            set
            {
                _deduc = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the deduc collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool deducSpecified
        {
            get
            {
                return ((this.deduc != null) 
                            && (this.deduc.Count != 0));
            }
        }
        
        /// <summary>
        /// <para>Valor  dos fornecimentos</para>
        /// <para>Tipo Decimal com 15 dígitos, sendo 13 de corpo e 2 decimais</para>
        /// <para xml:lang="en">Pattern: 0|0\.[0-9]{2}|[1-9]{1}[0-9]{0,12}(\.[0-9]{2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Valor dos fornecimentos")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("0|0\\.[0-9]{2}|[1-9]{1}[0-9]{0,12}(\\.[0-9]{2})?")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("vFor")]
        public string VFor { get; set; }
        
        /// <summary>
        /// <para>Valor Total das Deduções</para>
        /// <para>Tipo Decimal com 15 dígitos, sendo 13 de corpo e 2 decimais</para>
        /// <para xml:lang="en">Pattern: 0|0\.[0-9]{2}|[1-9]{1}[0-9]{0,12}(\.[0-9]{2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Valor Total das Deduções")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("0|0\\.[0-9]{2}|[1-9]{1}[0-9]{0,12}(\\.[0-9]{2})?")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("vTotDed")]
        public string VTotDed { get; set; }
        
        /// <summary>
        /// <para>Valor Líquido dos fornecimentos</para>
        /// <para>Tipo Decimal com 15 dígitos, sendo 13 de corpo e 2 decimais</para>
        /// <para xml:lang="en">Pattern: 0|0\.[0-9]{2}|[1-9]{1}[0-9]{0,12}(\.[0-9]{2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Valor Líquido dos fornecimentos")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("0|0\\.[0-9]{2}|[1-9]{1}[0-9]{0,12}(\\.[0-9]{2})?")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("vLiqFor")]
        public string VLiqFor { get; set; }
    }
}
