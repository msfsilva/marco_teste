//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 3.0.1188.0 using the following command:
// XmlSchemaClassGenerator.Console -v --output C:\Projetos.git\Recursos.C#.IWTNfeCompleto\BibliotecasDatasets\novo --namespace IWTNFCompleto.BibliotecaDatasets.v4_0 --separateFiles --collectionSettersMode Public --namingScheme Legacy --typeNameSubstituteFile C:\Projetos.git\Recursos.C#.IWTNfeCompleto\correcoes.map --order C:\Temp\PL_009\retEnviNFe_v4.00.xsd
namespace IWTNFCompleto.BibliotecaDatasets.v4_0
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1188.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TNFeInfNFeDetProd", Namespace="http://www.portalfiscal.inf.br/nfe", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TNFeInfNFeDetProd
    {
        
        /// <summary>
        /// <para>Código do produto ou serviço. Preencher com CFOP caso se trate de itens não relacionados com mercadorias/produto e que o contribuinte não possua codificação própria
        ///Formato ”CFOP9999”.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 60.</para>
        /// <para xml:lang="en">Pattern: [!-ÿ]{1}[ -ÿ]{0,}[!-ÿ]{1}|[!-ÿ]{1}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Código do produto ou serviço. Preencher com CFOP caso se trate de itens não relac" +
            "ionados com mercadorias/produto e que o contribuinte não possua codificação próp" +
            "ria Formato ”CFOP9999”.")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(60)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[!-ÿ]{1}[ -ÿ]{0,}[!-ÿ]{1}|[!-ÿ]{1}")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("cProd", Order=0)]
        public string cProd { get; set; }
        
        /// <summary>
        /// <para>GTIN (Global Trade Item Number) do produto, antigo código EAN ou código de barras</para>
        /// <para xml:lang="en">Pattern: SEM GTIN|[0-9]{0}|[0-9]{8}|[0-9]{12,14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GTIN (Global Trade Item Number) do produto, antigo código EAN ou código de barras" +
            "")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("SEM GTIN|[0-9]{0}|[0-9]{8}|[0-9]{12,14}")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("cEAN", Order=1)]
        public string cEAN { get; set; }
        
        /// <summary>
        /// <para>Codigo de barras diferente do padrão GTIN</para>
        /// <para xml:lang="en">Minimum length: 3.</para>
        /// <para xml:lang="en">Maximum length: 30.</para>
        /// <para xml:lang="en">Pattern: [!-ÿ]{1}[ -ÿ]{0,}[!-ÿ]{1}|[!-ÿ]{1}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Codigo de barras diferente do padrão GTIN")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(3)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(30)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[!-ÿ]{1}[ -ÿ]{0,}[!-ÿ]{1}|[!-ÿ]{1}")]
        [System.Xml.Serialization.XmlElementAttribute("cBarra", Order=2)]
        public string CBarra { get; set; }
        
        /// <summary>
        /// <para>Descrição do produto ou serviço</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 120.</para>
        /// <para xml:lang="en">Pattern: [!-ÿ]{1}[ -ÿ]{0,}[!-ÿ]{1}|[!-ÿ]{1}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Descrição do produto ou serviço")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(120)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[!-ÿ]{1}[ -ÿ]{0,}[!-ÿ]{1}|[!-ÿ]{1}")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("xProd", Order=3)]
        public string xProd { get; set; }
        
        /// <summary>
        /// <para>Código NCM (8 posições), será permitida a informação do gênero (posição do capítulo do NCM) quando a operação não for de comércio exterior (importação/exportação) ou o produto não seja tributado pelo IPI. Em caso de item de serviço ou item que não tenham produto (Ex. transferência de crédito, crédito do ativo imobilizado, etc.), informar o código 00 (zeros) (v2.0)</para>
        /// <para xml:lang="en">Pattern: [0-9]{2}|[0-9]{8}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Código NCM (8 posições), será permitida a informação do gênero (posição do capítulo do NCM) quando a operação não for de comércio exterior (importação/exportação) ou o produto não seja tributado pelo IPI. Em caso de item de serviço ou item que não tenham produto (Ex. transferência de crédito, crédito do ativo imobilizado, etc.), informar o código 00 (zeros) (v2.0)")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{2}|[0-9]{8}")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("NCM", Order=4)]
        public string NCM { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _nVE;
        
        /// <summary>
        /// <para>Nomenclatura de Valor aduaneio e Estatístico</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Nomenclatura de Valor aduaneio e Estatístico")]
        [System.Xml.Serialization.XmlElementAttribute("NVE", Order=5)]
        public System.Collections.ObjectModel.Collection<string> NVE
        {
            get
            {
                return _nVE;
            }
            set
            {
                _nVE = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the NVE collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NVESpecified
        {
            get
            {
                return ((this.NVE != null) 
                            && (this.NVE.Count != 0));
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="TNFeInfNFeDetProd" /> class.</para>
        /// </summary>
        public TNFeInfNFeDetProd()
        {
            this._nVE = new System.Collections.ObjectModel.Collection<string>();
            this._gCred = new System.Collections.ObjectModel.Collection<TNFeInfNFeDetProdGCred>();
            this._dI = new System.Collections.ObjectModel.Collection<TNFeInfNFeDetProdDI>();
            this._detExport = new System.Collections.ObjectModel.Collection<TNFeInfNFeDetProdDetExport>();
            this._rastro = new System.Collections.ObjectModel.Collection<TNFeInfNFeDetProdRastro>();
            this._arma = new System.Collections.ObjectModel.Collection<TNFeInfNFeDetProdArma>();
        }
        
        /// <summary>
        /// <para>Codigo especificador da Substuicao Tributaria - CEST, que identifica a mercadoria sujeita aos regimes de  substituicao tributária e de antecipação do recolhimento  do imposto</para>
        /// <para xml:lang="en">Pattern: [0-9]{7}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Codigo especificador da Substuicao Tributaria - CEST, que identifica a mercadoria" +
            " sujeita aos regimes de substituicao tributária e de antecipação do recolhimento" +
            " do imposto")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{7}")]
        [System.Xml.Serialization.XmlElementAttribute("CEST", Order=6)]
        public string CEST { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("indEscala", Order=7)]
        public TNFeInfNFeDetProdIndEscala IndEscala { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IndEscala property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IndEscalaSpecified { get; set; }
        
        /// <summary>
        /// <para>CNPJ do Fabricante da Mercadoria, obrigatório para produto em escala NÃO relevante.</para>
        /// <para>Tipo Número do CNPJ</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("CNPJ do Fabricante da Mercadoria, obrigatório para produto em escala NÃO relevant" +
            "e.")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("CNPJFab", Order=8)]
        public string CNPJFab { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: ([!-ÿ]{8}|[!-ÿ]{10}|SEM CBENEF)?.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([!-ÿ]{8}|[!-ÿ]{10}|SEM CBENEF)?")]
        [System.Xml.Serialization.XmlElementAttribute("cBenef", Order=9)]
        public string cBenef { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<TNFeInfNFeDetProdGCred> _gCred;
        
        /// <summary>
        /// <para>Grupo de informações sobre o CréditoPresumido</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Grupo de informações sobre o CréditoPresumido")]
        [System.Xml.Serialization.XmlElementAttribute("gCred", Order=10)]
        public System.Collections.ObjectModel.Collection<TNFeInfNFeDetProdGCred> GCred
        {
            get
            {
                return _gCred;
            }
            set
            {
                _gCred = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the GCred collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GCredSpecified
        {
            get
            {
                return ((this.GCred != null) 
                            && (this.GCred.Count != 0));
            }
        }
        
        /// <summary>
        /// <para>Código EX TIPI (3 posições)</para>
        /// <para xml:lang="en">Pattern: [0-9]{2,3}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Código EX TIPI (3 posições)")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{2,3}")]
        [System.Xml.Serialization.XmlElementAttribute("EXTIPI", Order=11)]
        public string EXTIPI { get; set; }
        
        /// <summary>
        /// <para>Cfop</para>
        /// <para xml:lang="en">Pattern: [1,2,3,5,6,7]{1}[0-9]{3}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cfop")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[1,2,3,5,6,7]{1}[0-9]{3}")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("CFOP", Order=12)]
        public string CFOP { get; set; }
        
        /// <summary>
        /// <para>Unidade comercial</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 6.</para>
        /// <para xml:lang="en">Pattern: [!-ÿ]{1}[ -ÿ]{0,}[!-ÿ]{1}|[!-ÿ]{1}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unidade comercial")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(6)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[!-ÿ]{1}[ -ÿ]{0,}[!-ÿ]{1}|[!-ÿ]{1}")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("uCom", Order=13)]
        public string uCom { get; set; }
        
        /// <summary>
        /// <para>Quantidade Comercial  do produto, alterado para aceitar de 0 a 4 casas decimais e 11 inteiros.</para>
        /// <para>Tipo Decimal com 11 inteiros, podendo ter de 1 até 4 decimais</para>
        /// <para xml:lang="en">Pattern: 0|0\.[0-9]{1,4}|[1-9]{1}[0-9]{0,10}|[1-9]{1}[0-9]{0,10}(\.[0-9]{1,4})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Quantidade Comercial do produto, alterado para aceitar de 0 a 4 casas decimais e " +
            "11 inteiros.")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("0|0\\.[0-9]{1,4}|[1-9]{1}[0-9]{0,10}|[1-9]{1}[0-9]{0,10}(\\.[0-9]{1,4})?")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("qCom", Order=14)]
        public string qCom { get; set; }
        
        /// <summary>
        /// <para>Valor unitário de comercialização  - alterado para aceitar 0 a 10 casas decimais e 11 inteiros</para>
        /// <para>Tipo Decimal com 11 inteiros, podendo ter de 1 até 10 decimais</para>
        /// <para xml:lang="en">Pattern: 0|0\.[0-9]{1,10}|[1-9]{1}[0-9]{0,10}|[1-9]{1}[0-9]{0,10}(\.[0-9]{1,10})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Valor unitário de comercialização - alterado para aceitar 0 a 10 casas decimais e" +
            " 11 inteiros")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("0|0\\.[0-9]{1,10}|[1-9]{1}[0-9]{0,10}|[1-9]{1}[0-9]{0,10}(\\.[0-9]{1,10})?")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("vUnCom", Order=15)]
        public string vUnCom { get; set; }
        
        /// <summary>
        /// <para>Valor bruto do produto ou serviço.</para>
        /// <para>Tipo Decimal com 15 dígitos, sendo 13 de corpo e 2 decimais</para>
        /// <para xml:lang="en">Pattern: 0|0\.[0-9]{2}|[1-9]{1}[0-9]{0,12}(\.[0-9]{2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Valor bruto do produto ou serviço.")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("0|0\\.[0-9]{2}|[1-9]{1}[0-9]{0,12}(\\.[0-9]{2})?")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("vProd", Order=16)]
        public string vProd { get; set; }
        
        /// <summary>
        /// <para>GTIN (Global Trade Item Number) da unidade tributável, antigo código EAN ou código de barras</para>
        /// <para xml:lang="en">Pattern: SEM GTIN|[0-9]{0}|[0-9]{8}|[0-9]{12,14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("GTIN (Global Trade Item Number) da unidade tributável, antigo código EAN ou códig" +
            "o de barras")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("SEM GTIN|[0-9]{0}|[0-9]{8}|[0-9]{12,14}")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("cEANTrib", Order=17)]
        public string cEANTrib { get; set; }
        
        /// <summary>
        /// <para>Código de barras da unidade tributável diferente do padrão GTIN</para>
        /// <para xml:lang="en">Minimum length: 3.</para>
        /// <para xml:lang="en">Maximum length: 30.</para>
        /// <para xml:lang="en">Pattern: [!-ÿ]{1}[ -ÿ]{0,}[!-ÿ]{1}|[!-ÿ]{1}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Código de barras da unidade tributável diferente do padrão GTIN")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(3)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(30)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[!-ÿ]{1}[ -ÿ]{0,}[!-ÿ]{1}|[!-ÿ]{1}")]
        [System.Xml.Serialization.XmlElementAttribute("cBarraTrib", Order=18)]
        public string CBarraTrib { get; set; }
        
        /// <summary>
        /// <para>Unidade Tributável</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 6.</para>
        /// <para xml:lang="en">Pattern: [!-ÿ]{1}[ -ÿ]{0,}[!-ÿ]{1}|[!-ÿ]{1}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Unidade Tributável")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(6)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[!-ÿ]{1}[ -ÿ]{0,}[!-ÿ]{1}|[!-ÿ]{1}")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("uTrib", Order=19)]
        public string uTrib { get; set; }
        
        /// <summary>
        /// <para>Quantidade Tributável - alterado para aceitar de 0 a 4 casas decimais e 11 inteiros</para>
        /// <para>Tipo Decimal com 11 inteiros, podendo ter de 1 até 4 decimais</para>
        /// <para xml:lang="en">Pattern: 0|0\.[0-9]{1,4}|[1-9]{1}[0-9]{0,10}|[1-9]{1}[0-9]{0,10}(\.[0-9]{1,4})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Quantidade Tributável - alterado para aceitar de 0 a 4 casas decimais e 11 inteir" +
            "os")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("0|0\\.[0-9]{1,4}|[1-9]{1}[0-9]{0,10}|[1-9]{1}[0-9]{0,10}(\\.[0-9]{1,4})?")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("qTrib", Order=20)]
        public string qTrib { get; set; }
        
        /// <summary>
        /// <para>Valor unitário de tributação - - alterado para aceitar 0 a 10 casas decimais e 11 inteiros</para>
        /// <para>Tipo Decimal com 11 inteiros, podendo ter de 1 até 10 decimais</para>
        /// <para xml:lang="en">Pattern: 0|0\.[0-9]{1,10}|[1-9]{1}[0-9]{0,10}|[1-9]{1}[0-9]{0,10}(\.[0-9]{1,10})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Valor unitário de tributação - - alterado para aceitar 0 a 10 casas decimais e 11" +
            " inteiros")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("0|0\\.[0-9]{1,10}|[1-9]{1}[0-9]{0,10}|[1-9]{1}[0-9]{0,10}(\\.[0-9]{1,10})?")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("vUnTrib", Order=21)]
        public string vUnTrib { get; set; }
        
        /// <summary>
        /// <para>Valor Total do Frete</para>
        /// <para>Tipo Decimal com 15 dígitos, sendo 13 de corpo e 2 decimais, utilizado em tags opcionais</para>
        /// <para xml:lang="en">Pattern: 0\.[0-9]{1}[1-9]{1}|0\.[1-9]{1}[0-9]{1}|[1-9]{1}[0-9]{0,12}(\.[0-9]{2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Valor Total do Frete")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("0\\.[0-9]{1}[1-9]{1}|0\\.[1-9]{1}[0-9]{1}|[1-9]{1}[0-9]{0,12}(\\.[0-9]{2})?")]
        [System.Xml.Serialization.XmlElementAttribute("vFrete", Order=22)]
        public string vFrete { get; set; }
        
        /// <summary>
        /// <para>Valor Total do Seguro</para>
        /// <para>Tipo Decimal com 15 dígitos, sendo 13 de corpo e 2 decimais, utilizado em tags opcionais</para>
        /// <para xml:lang="en">Pattern: 0\.[0-9]{1}[1-9]{1}|0\.[1-9]{1}[0-9]{1}|[1-9]{1}[0-9]{0,12}(\.[0-9]{2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Valor Total do Seguro")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("0\\.[0-9]{1}[1-9]{1}|0\\.[1-9]{1}[0-9]{1}|[1-9]{1}[0-9]{0,12}(\\.[0-9]{2})?")]
        [System.Xml.Serialization.XmlElementAttribute("vSeg", Order=23)]
        public string vSeg { get; set; }
        
        /// <summary>
        /// <para>Valor do Desconto</para>
        /// <para>Tipo Decimal com 15 dígitos, sendo 13 de corpo e 2 decimais, utilizado em tags opcionais</para>
        /// <para xml:lang="en">Pattern: 0\.[0-9]{1}[1-9]{1}|0\.[1-9]{1}[0-9]{1}|[1-9]{1}[0-9]{0,12}(\.[0-9]{2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Valor do Desconto")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("0\\.[0-9]{1}[1-9]{1}|0\\.[1-9]{1}[0-9]{1}|[1-9]{1}[0-9]{0,12}(\\.[0-9]{2})?")]
        [System.Xml.Serialization.XmlElementAttribute("vDesc", Order=24)]
        public string vDesc { get; set; }
        
        /// <summary>
        /// <para>Outras despesas acessórias</para>
        /// <para>Tipo Decimal com 15 dígitos, sendo 13 de corpo e 2 decimais, utilizado em tags opcionais</para>
        /// <para xml:lang="en">Pattern: 0\.[0-9]{1}[1-9]{1}|0\.[1-9]{1}[0-9]{1}|[1-9]{1}[0-9]{0,12}(\.[0-9]{2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Outras despesas acessórias")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("0\\.[0-9]{1}[1-9]{1}|0\\.[1-9]{1}[0-9]{1}|[1-9]{1}[0-9]{0,12}(\\.[0-9]{2})?")]
        [System.Xml.Serialization.XmlElementAttribute("vOutro", Order=25)]
        public string vOutro { get; set; }
        
        /// <summary>
        /// <para>Este campo deverá ser preenchido com:
        /// 0 – o valor do item (vProd) não compõe o valor total da NF-e (vProd)
        /// 1  – o valor do item (vProd) compõe o valor total da NF-e (vProd)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Este campo deverá ser preenchido com: 0 – o valor do item (vProd) não compõe o va" +
            "lor total da NF-e (vProd) 1 – o valor do item (vProd) compõe o valor total da NF" +
            "-e (vProd)")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("indTot", Order=26)]
        public TNFeInfNFeDetProdIndTot indTot { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<TNFeInfNFeDetProdDI> _dI;
        
        /// <summary>
        /// <para>Delcaração de Importação
        ///(NT 2011/004)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Delcaração de Importação (NT 2011/004)")]
        [System.Xml.Serialization.XmlElementAttribute("DI", Order=27)]
        public System.Collections.ObjectModel.Collection<TNFeInfNFeDetProdDI> DI
        {
            get
            {
                return _dI;
            }
            set
            {
                _dI = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DI collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DISpecified
        {
            get
            {
                return ((this.DI != null) 
                            && (this.DI.Count != 0));
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<TNFeInfNFeDetProdDetExport> _detExport;
        
        /// <summary>
        /// <para>Detalhe da exportação</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Detalhe da exportação")]
        [System.Xml.Serialization.XmlElementAttribute("detExport", Order=28)]
        public System.Collections.ObjectModel.Collection<TNFeInfNFeDetProdDetExport> DetExport
        {
            get
            {
                return _detExport;
            }
            set
            {
                _detExport = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the DetExport collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DetExportSpecified
        {
            get
            {
                return ((this.DetExport != null) 
                            && (this.DetExport.Count != 0));
            }
        }
        
        /// <summary>
        /// <para>pedido de compra - Informação de interesse do emissor para controle do B2B.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 15.</para>
        /// <para xml:lang="en">Pattern: [!-ÿ]{1}[ -ÿ]{0,}[!-ÿ]{1}|[!-ÿ]{1}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("pedido de compra - Informação de interesse do emissor para controle do B2B.")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(15)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[!-ÿ]{1}[ -ÿ]{0,}[!-ÿ]{1}|[!-ÿ]{1}")]
        [System.Xml.Serialization.XmlElementAttribute("xPed", Order=29)]
        public string xPed { get; set; }
        
        /// <summary>
        /// <para>Número do Item do Pedido de Compra - Identificação do número do item do pedido de Compra</para>
        /// <para xml:lang="en">Pattern: [0-9]{1,6}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Número do Item do Pedido de Compra - Identificação do número do item do pedido de" +
            " Compra")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{1,6}")]
        [System.Xml.Serialization.XmlElementAttribute("nItemPed", Order=30)]
        public string nItemPed { get; set; }
        
        /// <summary>
        /// <para>Número de controle da FCI - Ficha de Conteúdo de Importação.</para>
        /// <para>Identificador único (Globally Unique Identifier)</para>
        /// <para xml:lang="en">Pattern: [A-F0-9]{8}-[A-F0-9]{4}-[A-F0-9]{4}-[A-F0-9]{4}-[A-F0-9]{12}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Número de controle da FCI - Ficha de Conteúdo de Importação.")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[A-F0-9]{8}-[A-F0-9]{4}-[A-F0-9]{4}-[A-F0-9]{4}-[A-F0-9]{12}")]
        [System.Xml.Serialization.XmlElementAttribute("nFCI", Order=31)]
        public string NFCI { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<TNFeInfNFeDetProdRastro> _rastro;
        
        [System.Xml.Serialization.XmlElementAttribute("rastro", Order=32)]
        public System.Collections.ObjectModel.Collection<TNFeInfNFeDetProdRastro> rastro
        {
            get
            {
                return _rastro;
            }
            set
            {
                _rastro = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the rastro collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool rastroSpecified
        {
            get
            {
                return ((this.rastro != null) 
                            && (this.rastro.Count != 0));
            }
        }
        
        /// <summary>
        /// <para>Informações mais detalhadas do produto (usada na NFF)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Informações mais detalhadas do produto (usada na NFF)")]
        [System.Xml.Serialization.XmlElementAttribute("infProdNFF", Order=33)]
        public TNFeInfNFeDetProdInfProdNFF InfProdNFF { get; set; }
        
        /// <summary>
        /// <para>Informações mais detalhadas do produto (usada na NFF)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Informações mais detalhadas do produto (usada na NFF)")]
        [System.Xml.Serialization.XmlElementAttribute("infProdEmb", Order=34)]
        public TNFeInfNFeDetProdInfProdEmb InfProdEmb { get; set; }
        
        /// <summary>
        /// <para>Veículos novos</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Veículos novos")]
        [System.Xml.Serialization.XmlElementAttribute("veicProd", Order=35)]
        public TNFeInfNFeDetProdVeicProd VeicProd { get; set; }
        
        /// <summary>
        /// <para>grupo do detalhamento de Medicamentos e de matérias-primas farmacêuticas</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("grupo do detalhamento de Medicamentos e de matérias-primas farmacêuticas")]
        [System.Xml.Serialization.XmlElementAttribute("med", Order=36)]
        public TNFeInfNFeDetProdMed Med { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<TNFeInfNFeDetProdArma> _arma;
        
        /// <summary>
        /// <para>Armamentos</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Armamentos")]
        [System.Xml.Serialization.XmlElementAttribute("arma", Order=37)]
        public System.Collections.ObjectModel.Collection<TNFeInfNFeDetProdArma> Arma
        {
            get
            {
                return _arma;
            }
            set
            {
                _arma = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Arma collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ArmaSpecified
        {
            get
            {
                return ((this.Arma != null) 
                            && (this.Arma.Count != 0));
            }
        }
        
        /// <summary>
        /// <para>Informar apenas para operações com combustíveis líquidos</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Informar apenas para operações com combustíveis líquidos")]
        [System.Xml.Serialization.XmlElementAttribute("comb", Order=38)]
        public TNFeInfNFeDetProdComb Comb { get; set; }
        
        /// <summary>
        /// <para>Número do RECOPI</para>
        /// <para xml:lang="en">Maximum length: 20.</para>
        /// <para xml:lang="en">Pattern: [0-9]{20}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Número do RECOPI")]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(20)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{20}")]
        [System.Xml.Serialization.XmlElementAttribute("nRECOPI", Order=39)]
        public string NRECOPI { get; set; }
    }
}
