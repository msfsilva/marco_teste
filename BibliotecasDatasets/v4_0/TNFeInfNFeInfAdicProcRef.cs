//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 3.0.1188.0 using the following command:
// XmlSchemaClassGenerator.Console -v --output C:\Projetos.git\Recursos.C#.IWTNfeCompleto\BibliotecasDatasets\novo --namespace IWTNFCompleto.BibliotecaDatasets.v4_0 --separateFiles --collectionSettersMode Public --namingScheme Legacy --typeNameSubstituteFile C:\Projetos.git\Recursos.C#.IWTNfeCompleto\correcoes.map --order C:\Temp\PL_009\retEnviNFe_v4.00.xsd
namespace IWTNFCompleto.BibliotecaDatasets.v4_0
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1188.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TNFeInfNFeInfAdicProcRef", Namespace="http://www.portalfiscal.inf.br/nfe", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TNFeInfNFeInfAdicProcRef
    {
        
        /// <summary>
        /// <para>Indentificador do processo ou ato
        ///concessório</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 60.</para>
        /// <para xml:lang="en">Pattern: [!-ÿ]{1}[ -ÿ]{0,}[!-ÿ]{1}|[!-ÿ]{1}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Indentificador do processo ou ato concessório")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(60)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[!-ÿ]{1}[ -ÿ]{0,}[!-ÿ]{1}|[!-ÿ]{1}")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=false)]
        [System.Xml.Serialization.XmlElementAttribute("nProc", Order=0)]
        public string NProc { get; set; }
        
        /// <summary>
        /// <para>Origem do processo, informar com:
        ///0 - SEFAZ;
        ///1 - Justiça Federal;
        ///2 - Justiça Estadual;
        ///3 - Secex/RFB;
        ///4 - CONFAZ;
        ///9 - Outros.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Origem do processo, informar com: 0 - SEFAZ; 1 - Justiça Federal; 2 - Justiça Est" +
            "adual; 3 - Secex/RFB; 4 - CONFAZ; 9 - Outros.")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("indProc", Order=1)]
        public TNFeInfNFeInfAdicProcRefIndProc IndProc { get; set; }
        
        /// <summary>
        /// <para>Tipo do ato concessório
        ///														Para origem do Processo na SEFAZ (indProc=0), informar o
        ///tipo de ato concessório:
        ///08 - Termo de Acordo;
        ///10 - Regime Especial;
        ///12 - Autorização específica;
        ///14 - Ajuste SINIEF;
        ///15 - Convênio ICMS.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tipo do ato concessório Para origem do Processo na SEFAZ (indProc=0), informar o " +
            "tipo de ato concessório: 08 - Termo de Acordo; 10 - Regime Especial; 12 - Autori" +
            "zação específica; 14 - Ajuste SINIEF; 15 - Convênio ICMS.")]
        [System.Xml.Serialization.XmlElementAttribute("tpAto", Order=2)]
        public TNFeInfNFeInfAdicProcRefTpAto TpAto { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TpAto property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TpAtoSpecified { get; set; }
    }
}
