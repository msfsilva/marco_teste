//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 3.0.1185.0 using the following command:
// XmlSchemaClassGenerator.Console -v --output C:\Projetos.git\Recursos.C#.IWTNfeCompleto\BibliotecasDatasets\novo --namespace IWTNFCompleto.BibliotecaDatasets.v4_0 --separateFiles --collectionSettersMode Public --namingScheme Legacy --typeNameSubstituteFile C:\Projetos.git\Recursos.C#.IWTNfeCompleto\correcoes.map C:\Temp\PL_009\retEnviNFe_v4.00.xsd
namespace IWTNFCompleto.BibliotecaDatasets.v4_0
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "3.0.1185.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TNFeInfNFeDetImpostoICMSICMS20", Namespace="http://www.portalfiscal.inf.br/nfe", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TNFeInfNFeDetImpostoICMSICMS20
    {
        
        /// <summary>
        /// <para>origem da mercadoria: 0 - Nacional 
        ///1 - Estrangeira - Importação direta 
        ///2 - Estrangeira - Adquirida no mercado interno</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("origem da mercadoria: 0 - Nacional 1 - Estrangeira - Importação direta 2 - Estran" +
            "geira - Adquirida no mercado interno")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("orig")]
        public Torig orig { get; set; }
        
        /// <summary>
        /// <para>Tributção pelo ICMS
        ///20 - Com redução de base de cálculo</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Tributção pelo ICMS 20 - Com redução de base de cálculo")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("CST")]
        public TNFeInfNFeDetImpostoICMSICMS20CST CST { get; set; }
        
        /// <summary>
        /// <para>Modalidade de determinação da BC do ICMS:
        ///0 - Margem Valor Agregado (%);
        ///1 - Pauta (valor);
        ///2 - Preço Tabelado Máximo (valor);
        ///3 - Valor da Operação.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Modalidade de determinação da BC do ICMS: 0 - Margem Valor Agregado (%); 1 - Paut" +
            "a (valor); 2 - Preço Tabelado Máximo (valor); 3 - Valor da Operação.")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("modBC")]
        public TNFeInfNFeDetImpostoICMSICMS20ModBC modBC { get; set; }
        
        /// <summary>
        /// <para>Percentual de redução da BC</para>
        /// <para>Tipo Decimal com até 3 dígitos inteiros, podendo ter de 2 até 4 decimais</para>
        /// <para xml:lang="en">Pattern: 0|0\.[0-9]{2,4}|[1-9]{1}[0-9]{0,2}(\.[0-9]{2,4})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Percentual de redução da BC")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("0|0\\.[0-9]{2,4}|[1-9]{1}[0-9]{0,2}(\\.[0-9]{2,4})?")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("pRedBC")]
        public string pRedBC { get; set; }
        
        /// <summary>
        /// <para>Valor da BC do ICMS</para>
        /// <para>Tipo Decimal com 15 dígitos, sendo 13 de corpo e 2 decimais</para>
        /// <para xml:lang="en">Pattern: 0|0\.[0-9]{2}|[1-9]{1}[0-9]{0,12}(\.[0-9]{2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Valor da BC do ICMS")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("0|0\\.[0-9]{2}|[1-9]{1}[0-9]{0,12}(\\.[0-9]{2})?")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("vBC")]
        public string vBC { get; set; }
        
        /// <summary>
        /// <para>Alíquota do ICMS</para>
        /// <para>Tipo Decimal com até 3 dígitos inteiros, podendo ter de 2 até 4 decimais</para>
        /// <para xml:lang="en">Pattern: 0|0\.[0-9]{2,4}|[1-9]{1}[0-9]{0,2}(\.[0-9]{2,4})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Alíquota do ICMS")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("0|0\\.[0-9]{2,4}|[1-9]{1}[0-9]{0,2}(\\.[0-9]{2,4})?")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("pICMS")]
        public string pICMS { get; set; }
        
        /// <summary>
        /// <para>Valor do ICMS</para>
        /// <para>Tipo Decimal com 15 dígitos, sendo 13 de corpo e 2 decimais</para>
        /// <para xml:lang="en">Pattern: 0|0\.[0-9]{2}|[1-9]{1}[0-9]{0,12}(\.[0-9]{2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Valor do ICMS")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("0|0\\.[0-9]{2}|[1-9]{1}[0-9]{0,12}(\\.[0-9]{2})?")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlElementAttribute("vICMS")]
        public string vICMS { get; set; }
        
        /// <summary>
        /// <para>Valor da Base de cálculo do FCP.</para>
        /// <para>Tipo Decimal com 15 dígitos, sendo 13 de corpo e 2 decimais</para>
        /// <para xml:lang="en">Pattern: 0|0\.[0-9]{2}|[1-9]{1}[0-9]{0,12}(\.[0-9]{2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Valor da Base de cálculo do FCP.")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("0|0\\.[0-9]{2}|[1-9]{1}[0-9]{0,12}(\\.[0-9]{2})?")]
        [System.Xml.Serialization.XmlElementAttribute("vBCFCP")]
        public string vBCFCP { get; set; }
        
        /// <summary>
        /// <para>Percentual de ICMS relativo ao Fundo de Combate à Pobreza (FCP).</para>
        /// <para>Tipo Decimal com até 3 dígitos inteiros e 2 até 4 decimais. Utilizados em TAGs opcionais, não aceita valor zero.</para>
        /// <para xml:lang="en">Pattern: 0\.[0-9]{2,4}|[1-9]{1}[0-9]{0,2}(\.[0-9]{2,4})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Percentual de ICMS relativo ao Fundo de Combate à Pobreza (FCP).")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("0\\.[0-9]{2,4}|[1-9]{1}[0-9]{0,2}(\\.[0-9]{2,4})?")]
        [System.Xml.Serialization.XmlElementAttribute("pFCP")]
        public string pFCP { get; set; }
        
        /// <summary>
        /// <para>Valor do ICMS relativo ao Fundo de Combate à Pobreza (FCP).</para>
        /// <para>Tipo Decimal com 15 dígitos, sendo 13 de corpo e 2 decimais</para>
        /// <para xml:lang="en">Pattern: 0|0\.[0-9]{2}|[1-9]{1}[0-9]{0,12}(\.[0-9]{2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Valor do ICMS relativo ao Fundo de Combate à Pobreza (FCP).")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("0|0\\.[0-9]{2}|[1-9]{1}[0-9]{0,12}(\\.[0-9]{2})?")]
        [System.Xml.Serialization.XmlElementAttribute("vFCP")]
        public string vFCP { get; set; }
        
        /// <summary>
        /// <para>Valor do ICMS de desoneração</para>
        /// <para>Tipo Decimal com 15 dígitos, sendo 13 de corpo e 2 decimais</para>
        /// <para xml:lang="en">Pattern: 0|0\.[0-9]{2}|[1-9]{1}[0-9]{0,12}(\.[0-9]{2})?.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Valor do ICMS de desoneração")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("0|0\\.[0-9]{2}|[1-9]{1}[0-9]{0,12}(\\.[0-9]{2})?")]
        [System.Xml.Serialization.XmlElementAttribute("vICMSDeson")]
        public string vICMSDeson { get; set; }
        
        /// <summary>
        /// <para>Motivo da desoneração do ICMS:3-Uso na agropecuária;9-Outros;12-Fomento agropecuário</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Motivo da desoneração do ICMS:3-Uso na agropecuária;9-Outros;12-Fomento agropecuá" +
            "rio")]
        [System.Xml.Serialization.XmlElementAttribute("motDesICMS")]
        public TNFeInfNFeDetImpostoICMSICMS20MotDesICMS motDesICMS { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the motDesICMS property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool motDesICMSSpecified { get; set; }
        
        /// <summary>
        /// <para>Indica se o valor do ICMS desonerado (vICMSDeson) deduz do valor do item (vProd):
        ///0=Valor do ICMS desonerado (vICMSDeson) não deduz do valor do item (vProd) / total da NF-e;
        ///1=Valor do ICMS desonerado (vICMSDeson) deduz do valor do item (vProd) / total da NF-e.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Indica se o valor do ICMS desonerado (vICMSDeson) deduz do valor do item (vProd): 0=Valor do ICMS desonerado (vICMSDeson) não deduz do valor do item (vProd) / total da NF-e; 1=Valor do ICMS desonerado (vICMSDeson) deduz do valor do item (vProd) / total da NF-e.")]
        [System.Xml.Serialization.XmlElementAttribute("indDeduzDeson")]
        public TNFeInfNFeDetImpostoICMSICMS20IndDeduzDeson IndDeduzDeson { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IndDeduzDeson property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IndDeduzDesonSpecified { get; set; }
    }
}
